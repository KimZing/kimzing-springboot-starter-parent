# 基本属性配置
kimzing:
  minio:
    # 是否启用minio配置(默认false)
    enabled: true
    # minio服务地址
    url: http://localhost:9000
    accessKey: admin
    secretKey: 1234567890
    # 统一对象前缀
    prefix: images/images-
    # 前缀类型
    prefixType: time
    # 前缀时间的格式
    timePattern: yyyyMMddHHmmss-
  sentinel:
    # 是否启用sentinel相关配置(默认true)
    enabled: true
    # 是否开启异常包装(默认true)
    exceptionHandler:
      # 异常拦截开关
      enabled: true
      # 提示码
      code: SECURITY
      # 提示信息
      message: 请求已被安全管控系统拦截，请联系管理员!
  redis:
    # 是否开启自定义redis模板
    enabled: true
    # redis服务级别统一前缀
    prefix: ${spring.application.name}
    # redis序列化与反序列化的时间格式
    time-pattern: yyyy-MM-dd HH:mm:ss
  log:
    # 方法日志开关(默认false)
    enabled: false
    # 日志中的时间戳格式(可选)
    time-pattern: yyyy-MM-dd HH:mm:ss:SSS
  web:
    escape:
      # 是否开启URL和Cookie转义字符(默认true)
      enabled: true
    resolver:
      # 是否开启Get请求方法解析(默认true)
      json:
        enabled: true
    result:
      # 是否开启统一结果包装
      enabled: true
      # 包装哪些包下的返回体
      package: com.kimzing,com.kingboy
    advice:
      # 是否启用异常拦截(默认false)
      enabled: true
    log:
      # 是否启用请求日志打印(默认true)
      enabled: true
    cors:
      # 是否开启跨域支持(默认true)
      enabled: true
      origins:
        - "http://baidu.com"
        - "http://localhost:8888"
    restTemplate:
      # 是否自动配置RestTemplate(默认true)
      enabled: true
    info:
      # 是否启用/info接口(默认false)
      enabled: true
      # 接口路径
      path: /info
      params:
        application: ${spring.application.name}
        port: ${server.port}
        profile: ${spring.profiles.active}
        version: ${spring.application.version}
        description: ${spring.application.description}
  # swagger配置
  swagger:
    # 当存在swagger依赖时，是否开启(默认true)
    enabled: true
    title: 标题
    description: 文档描述
    termsOfServiceUrl: 项目服务地址
    authorName: 作者
    authorEmail: 作者邮箱
    authorUrl: 作者主页
    version: 版本
    basePackage: 包路径

  # mybatis-plus配置
  mybatis-plus:
    page:
      # 当存在mybatisPlus依赖时，是否开启分页(默认true)
      enabled: true
      # 分页join数量查询优化
      optimizeJoin: true
    performance:
      # 当存在mybatisPlus依赖时，是否开启sql分析(默认true)
      enabled: true
      # 是否格式化输出SQL
      formate: true
      # 排查慢SQL的限制时间
      maxTime: 1000
  xxljob:
    enabled: true
    # 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。
    # 执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
    adminAddresses: http://127.0.0.1:8092/xxl-job-admin
    # 执行器通讯TOKEN [选填]：非空时启用；
    accessToken: ""
    executor:
      # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
      appname: ${spring.application.name}
      # 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。
      address:
      # 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；
      # 地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
      ip:
      # 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
      port: 0
      # 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
      logpath: ${user.home}/logs/xxljob/${spring.application.name}
      # 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；
      logretentiondays: 30
  # 加载指定配置文件到Spring的Environment
  property:
    files: ["classpath:message.properties","classpath:exception.properties"]